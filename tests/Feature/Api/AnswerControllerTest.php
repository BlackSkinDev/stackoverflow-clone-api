<?php

namespace Tests\Feature\Api;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;
use Faker\Factory;
use Illuminate\Http\Response;
use JWTAuth;
use Illuminate\Support\Str;


class AnswerControllerTest extends TestCase
{

    use RefreshDatabase;

    protected $user;
    protected $token;
    protected $faker;
    protected $question;
    protected $answer;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user= \App\Models\User::factory()->create();
        $this->token= JWTAuth::fromUser($this->user);
        $this->faker=\Faker\Factory::create();
        $this->question= \App\Models\Question::factory()->create();
        $this->answer= \App\Models\Answer::factory()->create();
    }


    /** @test  */
    public function logged_in_user_can_answer_a_question()
    {
        $response=$this->withHeaders(['Authorization' => "Bearer {$this->token}",])->json('POST',"api/answers/{$this->question->id}/reply",[
            'answer'=>$title= $this->faker->text(50),
            'question_id'=>$this->question->id,
            ]);
        $response->assertStatus(Response::HTTP_OK)
            ->assertExactJson([
                'message' => 'Answer saved'
            ]);
    }

    /** @test  */
    public function logged_in_user_can_upvote_an_answer(){

        $response=$this->withHeaders(['Authorization' => "Bearer {$this->token}",])->json('GET',"api/answers/{$this->answer->id}/upvote");
        $response->assertStatus(Response::HTTP_OK)
            ->assertExactJson([
                'message' => 'You just upvoted answer'
            ]);

    }

    /** @test  */
    public function logged_in_user_can_downvote_a_answer(){

        $response=$this->withHeaders(['Authorization' => "Bearer {$this->token}",])->json('GET',"api/answers/{$this->answer->id}/downvote");
        $response->assertStatus(Response::HTTP_OK)
            ->assertExactJson([
                'message' => 'You just downvoted answer'
            ]);

    }




}
